import java.io.File;
import javax.xml.XMLConstants;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;
import org.xml.sax.SAXException;
 
public class scheme {
 
    public static void main(String[] args) {
        
        String xmlFile = "data.xml";
        String xsdFile = "scheme.xsd";

        boolean isValid = validateXMLSchema(xsdFile, xmlFile);
 
        if (isValid) {
            System.out.println("XML document is valid.");
        } else {
            System.out.println("XML document is invalid.");
        }
    }
 
    public static boolean validateXMLSchema(String xsdPath, String xmlPath) {
        try {
           
            SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
 
            Schema schema = factory.newSchema(new File(xsdPath));
 
            Validator validator = schema.newValidator();
 
            validator.validate(new StreamSource(new File(xmlPath)));
 
            return true;
        } catch (SAXException e) {
            System.out.println("SAX Exception: " + e.getMessage());
            return false;
        } catch (Exception e) {
            System.out.println("Exception: " + e.getMessage());
            return false;
        }
    }
}